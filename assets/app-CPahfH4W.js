async function g(n){const e=`https://openlibrary.org/search.json?q=${encodeURIComponent(n)}`;try{const t=await fetch(e);if(!t.ok)throw new Error(`HTTP Error: ${t.status}`);return(await t.json()).docs.slice(0,20)}catch(t){throw console.error("Error fetching Open Library data:",t),t}}async function f(n,e){const i=`https://www.googleapis.com/books/v1/volumes?q=${encodeURIComponent(`${n} ${e}`)}`;try{const o=await fetch(i);if(!o.ok)throw new Error(`HTTP Error: ${o.status}`);const c=await o.json();if(!c.items||!c.items.length)return null;const s=c.items[0].volumeInfo;return{title:s.title,author:s.authors?.join(", "),description:s.description,image:s.imageLinks?.thumbnail||"/public/placeholder.png",publishedDate:s.publishedDate}}catch(o){return console.error("Error fetching Google Books data:",o),null}}class y{constructor(){this.modal=null}async open(e,t,i){this.close(),this.modal=document.createElement("div"),this.modal.classList.add("modal"),this.modal.innerHTML=`
      <div class="modal-content" role="dialog" aria-modal="true" aria-labelledby="book-title">
        <button class="close-btn" aria-label="Close details">&times;</button>
        <img src="" alt="Book cover" class="detail-cover" id="detail-cover" />
        <div class="book-info">
          <h2 id="book-title">${t}</h2>
          <p class="meta"><strong>Author:</strong> ${i}</p>
          <p class="meta" id="isbn"></p>
          <p class="meta" id="published"></p>
          <p class="desc" id="description">Loading details...</p>
        </div>
      </div>
    `,document.body.appendChild(this.modal);const o=this.modal.querySelector(".close-btn"),c=this.modal.querySelector("#description"),s=this.modal.querySelector("#published"),u=this.modal.querySelector("#detail-cover"),d=this.modal.querySelector("#isbn");o.addEventListener("click",()=>this.close()),this.modal.addEventListener("click",a=>{a.target===this.modal&&this.close()}),document.addEventListener("keydown",a=>{a.key==="Escape"&&this.close()});let l=null;try{l=await f(t,i)}catch(a){console.warn("Google Books API failed:",a)}let h="Not available";try{const a=await fetch(`https://openlibrary.org${e}/editions.json`);if(a.ok){const p=(await a.json()).entries?.find(m=>m.isbn_10||m.isbn_13);p&&(h=p.isbn_13?.[0]||p.isbn_10?.[0]||"Not available")}}catch(a){console.warn("Error fetching ISBN:",a)}u.src=l?.image||"/public/placeholder.png",u.alt=`${t} cover`,c.textContent=l?.description||"No description available.",s.textContent=l?.publishedDate?`Published: ${l.publishedDate}`:"",d.textContent=`ISBN: ${h}`}close(){this.modal&&(this.modal.remove(),this.modal=null)}}const E=new y;function w(n){const e=document.getElementById("results");if(e.innerHTML="",!n.length){e.innerHTML="<p>No results found. Try a different title or author.</p>";return}const t=document.createElement("div");t.classList.add("results-grid");let i=JSON.parse(localStorage.getItem("favorites"))||[];n.forEach(o=>{const c=o.cover_i?`https://covers.openlibrary.org/b/id/${o.cover_i}-M.jpg`:"/public/placeholder.png",s=o.title||"Untitled",u=o.author_name?o.author_name.join(", "):"Unknown Author",d=document.createElement("div");d.classList.add("book-card"),d.innerHTML=`
      <img src="${c}" alt="${s}" class="book-cover" />
      <h3>${s}</h3>
      <p>${u}</p>
      <div class="card-actions">
        <button class="details-btn" data-key="${o.key}">View Details</button>
        <button class="fav-btn">★ Favorite</button>
      </div>
    `,d.querySelector(".details-btn").addEventListener("click",()=>{E.open(o.key,s,u)}),d.querySelector(".fav-btn").addEventListener("click",async()=>{if(i.some(r=>r.title===s)){alert(`"${s}" is already in your favorites.`);return}let l="Not available";try{const r=await fetch(`https://openlibrary.org${o.key}/editions.json`);if(r.ok){const m=(await r.json()).entries?.find(v=>v.isbn_10||v.isbn_13);m&&(l=m.isbn_13?.[0]||m.isbn_10?.[0]||"Not available")}}catch(r){console.warn("Error fetching ISBN for favorite:",r)}const h={title:s,author:u,isbn:l};i.push(h),localStorage.setItem("favorites",JSON.stringify(i));const a=i.map(r=>`${r.title} — ${r.author} (ISBN: ${r.isbn})`).join(`
`);await navigator.clipboard.writeText(a),alert(`"${s}" added to favorites!
Full list copied to clipboard.`)}),t.appendChild(d)}),e.appendChild(t)}const k=document.getElementById("search-form"),L=document.getElementById("search-input");k.addEventListener("submit",async n=>{n.preventDefault();const e=L.value.trim(),t=document.getElementById("results");if(!e){t.innerHTML="<p>Please enter a title or author.</p>";return}t.innerHTML='<p class="loading">Searching...</p>';try{const i=await g(e);w(i)}catch(i){console.error(i),t.innerHTML='<p class="error">Failed to load results. Please try again.</p>'}});const $=document.getElementById("menu-toggle"),b=document.getElementById("nav-menu");$.addEventListener("click",()=>{b.classList.toggle("open")});b.querySelectorAll("a").forEach(n=>{n.addEventListener("click",()=>b.classList.remove("open"))});document.addEventListener("click",n=>{const e=document.querySelector(".modal");e&&n.target===e&&e.remove()});document.addEventListener("keydown",n=>{if(n.key==="Escape"){const e=document.querySelector(".modal");e&&e.remove()}});

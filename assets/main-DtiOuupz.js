(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const n of e)if(n.type==="childList")for(const r of n.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function o(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerPolicy&&(n.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?n.credentials="include":e.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(e){if(e.ep)return;e.ep=!0;const n=o(e);fetch(e.href,n)}})();async function y(i){const t=`https://openlibrary.org/search.json?q=${encodeURIComponent(i)}`;try{const o=await fetch(t);if(!o.ok)throw new Error(`HTTP Error: ${o.status}`);return(await o.json()).docs.slice(0,20)}catch(o){throw console.error("Error fetching Open Library data:",o),o}}async function b(i,t){const s=`https://www.googleapis.com/books/v1/volumes?q=${encodeURIComponent(`${i} ${t}`)}`;try{const e=await fetch(s);if(!e.ok)throw new Error(`HTTP Error: ${e.status}`);const n=await e.json();if(!n.items||!n.items.length)return null;const r=n.items[0].volumeInfo;return{title:r.title,author:r.authors?.join(", "),description:r.description,image:r.imageLinks?.thumbnail||"/public/placeholder.png",publishedDate:r.publishedDate}}catch(e){return console.error("Error fetching Google Books data:",e),null}}class v{constructor(){this.modal=null}async open(t,o,s){this.close(),this.modal=document.createElement("div"),this.modal.classList.add("modal"),this.modal.innerHTML=`
      <div class="modal-content" role="dialog" aria-modal="true" aria-labelledby="book-title">
        <button class="close-btn" aria-label="Close details">&times;</button>
        <img src="" alt="Book cover" class="detail-cover" id="detail-cover" />
        <div class="book-info">
          <h2 id="book-title">${o}</h2>
          <p class="meta"><strong>Author:</strong> ${s}</p>
          <p class="meta" id="isbn"></p>
          <p class="meta" id="published"></p>
          <p class="desc" id="description">Loading details...</p>
        </div>
      </div>
    `,document.body.appendChild(this.modal);const e=this.modal.querySelector(".close-btn"),n=this.modal.querySelector("#description"),r=this.modal.querySelector("#published"),u=this.modal.querySelector("#detail-cover"),d=this.modal.querySelector("#isbn");e.addEventListener("click",()=>this.close()),this.modal.addEventListener("click",a=>{a.target===this.modal&&this.close()}),document.addEventListener("keydown",a=>{a.key==="Escape"&&this.close()});let c=null;try{c=await b(o,s)}catch(a){console.warn("Google Books API failed:",a)}let p="Not available";try{const a=await fetch(`https://openlibrary.org${t}/editions.json`);if(a.ok){const h=(await a.json()).entries?.find(m=>m.isbn_10||m.isbn_13);h&&(p=h.isbn_13?.[0]||h.isbn_10?.[0]||"Not available")}}catch(a){console.warn("Error fetching ISBN:",a)}u.src=c?.image||"/public/placeholder.png",u.alt=`${o} cover`,n.textContent=c?.description||"No description available.",r.textContent=c?.publishedDate?`Published: ${c.publishedDate}`:"",d.textContent=`ISBN: ${p}`}close(){this.modal&&(this.modal.remove(),this.modal=null)}}const E=new v;function w(i){const t=document.getElementById("results");if(t.innerHTML="",!i.length){t.innerHTML="<p>No results found. Try a different title or author.</p>";return}const o=document.createElement("div");o.classList.add("results-grid");let s=JSON.parse(localStorage.getItem("favorites"))||[];i.forEach(e=>{const n=e.cover_i?`https://covers.openlibrary.org/b/id/${e.cover_i}-M.jpg`:"/public/placeholder.png",r=e.title||"Untitled",u=e.author_name?e.author_name.join(", "):"Unknown Author",d=document.createElement("div");d.classList.add("book-card"),d.innerHTML=`
      <img src="${n}" alt="${r}" class="book-cover" />
      <h3>${r}</h3>
      <p>${u}</p>
      <div class="card-actions">
        <button class="details-btn" data-key="${e.key}">View Details</button>
        <button class="fav-btn">★ Favorite</button>
      </div>
    `,d.querySelector(".details-btn").addEventListener("click",()=>{E.open(e.key,r,u)}),d.querySelector(".fav-btn").addEventListener("click",async()=>{if(s.some(l=>l.title===r)){alert(`"${r}" is already in your favorites.`);return}let c="Not available";try{const l=await fetch(`https://openlibrary.org${e.key}/editions.json`);if(l.ok){const m=(await l.json()).entries?.find(g=>g.isbn_10||g.isbn_13);m&&(c=m.isbn_13?.[0]||m.isbn_10?.[0]||"Not available")}}catch(l){console.warn("Error fetching ISBN for favorite:",l)}const p={title:r,author:u,isbn:c};s.push(p),localStorage.setItem("favorites",JSON.stringify(s));const a=s.map(l=>`${l.title} — ${l.author} (ISBN: ${l.isbn})`).join(`
`);await navigator.clipboard.writeText(a),alert(`"${r}" added to favorites!
Full list copied to clipboard.`)}),o.appendChild(d)}),t.appendChild(o)}const L=document.getElementById("search-form"),$=document.getElementById("search-input");L.addEventListener("submit",async i=>{i.preventDefault();const t=$.value.trim(),o=document.getElementById("results");if(!t){o.innerHTML="<p>Please enter a title or author.</p>";return}o.innerHTML='<p class="loading">Searching...</p>';try{const s=await y(t);w(s)}catch(s){console.error(s),o.innerHTML='<p class="error">Failed to load results. Please try again.</p>'}});const k=document.getElementById("menu-toggle"),f=document.getElementById("nav-menu");k.addEventListener("click",()=>{f.classList.toggle("open")});f.querySelectorAll("a").forEach(i=>{i.addEventListener("click",()=>f.classList.remove("open"))});document.addEventListener("click",i=>{const t=document.querySelector(".modal");t&&i.target===t&&t.remove()});document.addEventListener("keydown",i=>{if(i.key==="Escape"){const t=document.querySelector(".modal");t&&t.remove()}});
